.model small ;Модель памяти SMALL использует сегменты размером не более 64Кб
.stack 100h ;Сегмент стека размером 100h (256 байт)
.386 ;Разрешение трансляции команд процессора 386
.data ;Начало сегмента данных
student db 'Коновалов Александр 211', 0Dh, 0Ah, '$'
.code ;Начало сегмента кода
start: ;Точка входа в программу start

;Предопределенная метка @data обозначает
;адрес сегмента данных в момент запуска программы,
mov AX, @data ;который сначала загрузим в AX,
mov DS, AX ;а затем перенесем из AX в DS

call print_student

mov AX,65535	;В регистре AX задано число от 0 до 65535
mov BX,10	;аносим основание системы счисления, равное 10, в регистр BX

mov CX,0	;1. Номер младшего разряда числа, равный 0, заносим в регистр CX.

div_num:
    mov DX,0	;2. Заносим 0 в регистр DX (после деления в регистр DX попадет остаток от деления, перед делением надо его обнулить, т.к. делимое у нас DX:AX). Также DX содержит старшую значимую часть делимого(у нас всегда 0)
    div BX		;3. Выполняем деление DX:AX на BX: неполное частное от деления помещается в AX (div), а остаток (mod) - в DX.
    push DX		;4. Сохраняем содержимое DX в стеке (нам надо сохранить очередную цифру в стек)
    inc CX	    ;5. Увеличиваем значение счетчика в регистре CX на 1.(инкремент)
    cmp AX,0	;6.Проверка условия: если неполное частное равно 0, то переход на пункт 7, иначе переход на пункт 2.
    jne div_num	;переход к метке div_num, если метка ZF = 0(числа не равны)

loop_:		;7. Организуем цикл loop, в котором:
    pop DX      ;a. извлекаем из стека слово данных в регистр DX.
    ;shr DX, 8   ;b. выполняем логический сдвиг вправо над DX на 8 (SHR Оп1,счетчик), в результате которого получаем DH=0, DL = DH.(требуется только для деления на байт памяти, а у нас слово!)
    call print	;c. вызываем процедуру print вывода цифры на экран.
    loop loop_	;Если CX <> 0 то осуществить переход на loop_

mov ax,4C00h ;Завершение программы
int 21h

print_student proc
    mov AH,09h
    mov DX,offset student
    int 21h
    ret
print_student endp

print proc ;Процедура print вывода на экран одной цифры
    push AX     ;1. Сохраняем содержимое AX в стеке.
    mov AH,02h  ;2. Заносим в регистр АН значение 02h.
    add DL, 30h ;3. Выполняем преобразование в символьную форму находящейся в регистре DL цифры.
	int 21h     ;4. Вызываем прерывание 21h.
    pop AX      ;5. Восстанавливаем AX из стека.
	ret         ;6. Выполняем возврат из процедуры в точку вызова.
ret ;Возврат в программу
print endp ;Конец процедуры

end start ;Конец программы